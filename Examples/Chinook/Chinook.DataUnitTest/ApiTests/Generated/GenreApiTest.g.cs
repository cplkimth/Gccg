// <auto-generated> This file has been generated by Gccg</auto-generated>
#region
using Chinook.Data;
#endregion

namespace Chinook.DataUnitTest.ApiTests;


[TestClass]
public partial class GenreApiTest
{
    [TestInitialize]
    public void Initialize()
    {
        Api.Initialize().Wait();
    }

    [TestMethod]
    public async Task GetCount()
    {
        var count = await Api.Genre.GetCountAsync();

        count.ShouldBeGreaterThan(0);
    }

    [TestMethod]
    public async Task GetByKey()
    {
        var first = await Api.Genre.GetFirstAsync();
        var entity = await Api.Genre.GetByKeyAsync(first.GenreId );

        entity.PrimaryKeyValues.ShouldBe(first.PrimaryKeyValues);
    }

    [TestMethod]
    public async Task ExistsByKey()
    {
        var first = await Api.Genre.GetFirstAsync();

        (await Dao.Genre.ExistsByKeyAsync(first.GenreId )).ShouldBeTrue();
    }

    [TestMethod]
    public async Task Exists()
    {
        var first = await Api.Genre.GetFirstAsync();

        (await Api.Genre.ExistsByKeyAsync(first.GenreId )).ShouldBeTrue();
    }

    [TestMethod]
    public async Task DeleteByKey()
    {
        var first = await Api.Genre.GetFirstAsync();
        await Api.Genre.DeleteByKeyAsync(first.GenreId );

        (await Api.Genre.ExistsByKeyAsync(first.GenreId )).ShouldBeFalse();
    }

    [TestMethod]
    public async Task Insert()
    {
        var first = await Api.Genre.GetFirstAsync();

        var oldCount = await Api.Genre.GetCountAsync();

        var entity = first.Clone();
        entity.ClearKeyValues();
        GenreDaoTest.FillForInsert(entity);
        entity = await Api.Genre.InsertAsync(entity);

        var newCount = await Api.Genre.GetCountAsync();

        newCount.ShouldBe(oldCount + 1);
    }

    [TestMethod]
    public async Task Update()
    {
        var entity = await Api.Genre.GetFirstAsync();
        object value = GenreDaoTest.SetUpdateField(entity);
        await Api.Genre.UpdateAsync(entity);

        entity = await Api.Genre.GetFirstAsync();

        GenreDaoTest.GetUpdateField(entity).ShouldBe(value);
    }

    [TestMethod]
    public async Task GetFirst()
    {
        var entity = await Api.Genre.GetFirstAsync();
        entity.ShouldNotBeNull();
    }

    
}

